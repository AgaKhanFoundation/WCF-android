apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        applicationId "com.android.wcf.debug"
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debugConfig {
            storeFile file("debug.keystore")
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
//        releaseConfig {
//            storeFile file("akf_wcf.keystore")
//            keyAlias "android_akf_wcf"
//            keyPassword 'credentials.properties'
//            storePassword 'credentials.properties'
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.debugConfig
            //    signingConfig signingConfigs.releaseConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.debugConfig
        }
    }

    androidExtensions {
        experimental = true
    }

    configurations.all {
        //resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.force "com.android.support:support-annotations:${supportLibVersion}"
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    testOptions { unitTests.all { jvmArgs '-noverify' } }
}

repositories {
    google()
    jcenter()
}

dependencies {
    // jars
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Support Libs
    implementation "androidx.appcompat:appcompat:${supportLibVersion}"
    implementation "androidx.legacy:legacy-support-v4:${supportLibVersion}"
    implementation "com.google.android.material:material:${supportLibVersion}"
    implementation "androidx.cardview:cardview:${supportLibVersion}"
    implementation "androidx.annotation:annotation:${supportLibVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"
    implementation "androidx.vectordrawable:vectordrawable:${supportLibVersion}"

    implementation "androidx.multidex:multidex:${multidexLibVersion}"

    //Install Referrer
    implementation 'com.android.installreferrer:installreferrer:1.0'

    //Google Play Services
    implementation "com.google.android.gms:play-services-gcm:${gcmVersion}"
    implementation "com.google.android.gms:play-services-auth:15.0.1"

    //Facebook
    implementation("com.facebook.android:facebook-android-sdk:${facebookSdkVersion}") {
        exclude group: 'com.android.support'
    }

    //ExoPlayer Google
    implementation "com.google.android.exoplayer:exoplayer-core:${exoPlayerVersion}"
    implementation "com.google.android.exoplayer:exoplayer-dash:${exoPlayerVersion}"
    implementation "com.google.android.exoplayer:exoplayer-ui:${exoPlayerVersion}"
    implementation "com.google.android.exoplayer:exoplayer-hls:${exoPlayerVersion}"

    // dagger
    implementation "com.google.dagger:dagger-android:${dagger2Version}"
    implementation "com.google.dagger:dagger-android-support:${dagger2Version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${daggerKaptCompilerVersion}"
    kaptTest "com.google.dagger:dagger-compiler:${daggerKaptCompilerVersion}"

    //Retrofit
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${retrofitLoggingInterceptorVersion}"

    //RxJava
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"

    //Gson
    implementation "com.google.code.gson:gson:${gsonVersion}"

    //Glide Image Loading
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"

    //ButterKnife

//    Removing ButterKnife because Binding is not working when Kotlin is activated in the project
//    implementation "com.jakewharton:butterknife:$[butterknifeVersion}"
//    //annotationProcessor "com.jakewharton:butterknife-compiler:8.8.1"
//    kapt "com.jakewharton:butterknife-compiler:$[butterknifeVersion}"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //Testing
    testImplementation "junit:junit:${jUnitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    //testImplementation 'org.json:json:20140107'
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"

    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v${testUiAutoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "androidx.test:runner:${testRunnerVersion}"

//    espressoExclude = [findBugsGroup : 'com.google.code.findbugs',
//                       findBugsModule: 'jsr305',
//                       supportGroup  : 'com.android.support',
//                       supportModule : 'support-annotations']


}
