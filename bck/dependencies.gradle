/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/


ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.4.1'
versions.apache_commons = '2.5'
versions.arch_core = '2.0.0'
versions.atsl_rules = '1.1.0-alpha4'
versions.atsl_runner = '1.1.0-alpha4'
versions.butterKnife = '8.8.1'
versions.constraint_layout = '2.0.0-alpha3'
versions.core_ktx = '1.0.0'
versions.dagger = '2.16'
versions.daggerCompiler = '2.14.1'

versions.dexmaker = '2.2.0'
versions.espresso = '3.1.0-alpha4'
versions.facebook = '4.39.0'
versions.glide = '4.8.0'
versions.gson = '2.8.5'
versions.googlePlayAuth = '15.0.1'
versions.googlePlayGcm = '15.0.1'
versions.googleExoPlayer = '2.8.4'
versions.hamcrest = '1.3'
versions.junit = '4.12'
versions.kotlin = '1.3.21'
versions.lifecycle = '2.0.0'
versions.mockito = '2.7.19'
versions.mockito_all = '1.10.19'
versions.mockito_android = '2.22.0'
versions.mockwebserver = '3.8.1'
versions.navigation = '2.1.0-alpha01'
versions.okhttp_logging_interceptor = '3.9.0'
versions.paging = '2.1.0-rc01'
versions.retrofit = '2.5.0'
versions.retrofitVersion = '2.5.0'
versions.retrofitLoggingInterceptorVersion = '3.12.1'

versions.room = '2.1.0-alpha03'
versions.rx_android = '2.1.1'
versions.rxjava2 = '2.2.8'
versions.rxKotlin = '2.3.0'
versions.adapter_rxjava2 = '2.5.0'
versions.support = '1.0.0'
versions.timber = '4.5.1'
versions.work = '2.0.0-rc01'
versions.multidex = '2.0.0'

versions.jsonTesting = 'org.json:json:20140107'
versions.testUiAutoVersion = '18:2.1.3'
versions.espressoVersion = '3.1.0-alpha4'
versions.testRunnerVersion = '1.1.0-alpha4'

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.appcompat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.vectordrawable = "androidx.vectordrawable:vectordrawable:$versions.support"
support.multidex = "androidx.multidex:multidex:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.support = support

def googlePlayServices = [:]
googlePlayServices.gcm = "com.google.android.gms:play-services-gcm:$versions.googlePlayGcm"
googlePlayServices.auth = "com.google.android.gms:play-services-auth:$versions.googlePlayAuth"
deps.googlePlayServices = googlePlayServices

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rxKotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin"

deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx_adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.adapter_rxjava2"

deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"


ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 22
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
//    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}
ext.addRepos = this.&addRepos


